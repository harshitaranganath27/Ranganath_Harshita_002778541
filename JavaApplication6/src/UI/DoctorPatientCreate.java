/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CredentialDirectory;
import model.Doctor;
import model.Encounter;
import model.EncounterHistory;
import model.MainSys;
import model.Patient;
import model.Person;
import model.VitalSigns;

/**
 *
 * @author harshitaranganath
 */
public class DoctorPatientCreate extends javax.swing.JPanel {

    /**
     * Creates new form DoctorViewJPanel
     */
    MainSys mainSystem;
    CredentialDirectory allCredentials;

    public DoctorPatientCreate(MainSys mainSystem, CredentialDirectory allCredentials) {
        initComponents();
        this.mainSystem = mainSystem;
        this.allCredentials = allCredentials;
    }

    public boolean floatCheck(String str) {
        boolean correct = str.matches("[-+]?[0-9]*\\.?[0-9]+");
        return correct;
    }

    public boolean rolecheck() {
        Main mj = new Main();
        String password;
        String username;
        String role;
        password = "admin";
        username = "admin";
        role = mj.getrole();
        boolean b1 = allCredentials.checkSysAdminCred(username, password, role);
        return b1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        txtPatientid = new javax.swing.JTextField();
        ComboBoxPatient = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtbt = new javax.swing.JTextField();
        txtrr = new javax.swing.JTextField();
        txtbp = new javax.swing.JTextField();
        datechooser = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtComments = new javax.swing.JTextField();
        txtEncid = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnpopulate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();

        jLabel1.setBackground(new java.awt.Color(232, 225, 225));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Record Patient details");

        jLabel2.setText("Patient Name");

        jLabel3.setText("Patient Id");

        jLabel5.setText("Contact Info");

        jLabel6.setText("Patients Basic Information");

        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });

        txtPatientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatientidKeyTyped(evt);
            }
        });

        ComboBoxPatient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Patients Vital Signs");

        jLabel8.setText("Body Temperature (Â°C)");

        jLabel9.setText("Blood Pressure (mm Hg)");

        jLabel10.setText("Respiration Rate (Per Minute)");

        txtbt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbtKeyTyped(evt);
            }
        });

        datechooser.setToolTipText("");
        datechooser.setDateFormatString("yyyy-MM-dd");

        jLabel11.setText("Encounter Date");

        jButton1.setText("Create or Edit Encounter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Comments");

        jLabel13.setText("Encounter Id");

        jLabel14.setText("Encounter Details");

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnpopulate.setText("Populate Table");
        btnpopulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpopulateActionPerformed(evt);
            }
        });

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient ID", "Contact Info", "Body Temp", "Respiration Rate", "Blood Pressure", "Encounter Date", "Encounter ID", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(456, 456, 456))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel6)
                        .addGap(172, 172, 172)
                        .addComponent(jLabel7)
                        .addGap(241, 241, 241)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientid, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtrr)
                                    .addComponent(txtbp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtbt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(104, 104, 104)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEncid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(btnpopulate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(204, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtComments, txtEncid, txtbp, txtbt, txtrr});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(17, 17, 17)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(ComboBoxPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPatientid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtbt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txtrr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtbp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(txtComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)
                                .addComponent(txtEncid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btnpopulate))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtComments, txtEncid, txtbp});

    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String name = ComboBoxPatient.getSelectedItem().toString();
        int id1 = Integer.valueOf(txtPatientid.getText());
        Long con = Long.valueOf(txtContact.getText());
        Float rr = Float.valueOf(txtrr.getText());
        Float bp = Float.valueOf(txtbp.getText());
        Float bt = Float.valueOf(txtbt.getText());
        Date dt = datechooser.getDate();
        String co = txtComments.getText();
        int id2 = Integer.valueOf(txtEncid.getText());

        boolean b23 = ((txtPatientid.getText().length() != 0) && (txtContact.getText().length() != 0) && (txtrr.getText().length() != 0) && (txtbp.getText().length() != 0) && (txtbt.getText().length() != 0) && (txtComments.getText().length() != 0) && (datechooser.getDate().toString().length() != 0));
        if ((((bp > 50) && (bp < 200)) && ((rr > 0) && (rr < 100)) && ((bt >= 37) && (bt <= 110))) || b23) {
            Patient pt = mainSystem.getPatientDir().addNewPatient();
            pt.setContactInfo(con);
            pt.setNameOfPatient(name);
            pt.setPatientId(id1);

            Encounter enc = new Encounter();
            enc.setEncountercomments(co);
            enc.setEncounterdate(dt);
            enc.setEncounterid(id2);

            VitalSigns vs = new VitalSigns();
            vs.setBloodPressure(bp);
            vs.setBodyTemp(bt);
            vs.setRr(rr);
            enc.setVs(vs);

            pt.getEncDir().add(enc);

            for (Patient pat : mainSystem.getPatientDir().getAllPatients()) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "The Vital Signs are Incorrect");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactKeyPressed

    private void txtbtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbtKeyTyped

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtPatientidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientidKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPatientidKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords.getModel();
            Patient SelectedRecords = (Patient) m2.getValueAt(SelectedRow, 0);
            txtPatientid.setText(String.valueOf(SelectedRecords.getPatientId()));
            popPatients1(SelectedRecords.getNameOfPatient());
            mainSystem.getPatientDir().deletePatient(SelectedRecords);
            txtContact.setText(String.valueOf(SelectedRecords.getContactInfo()));
            txtrr.setText(String.valueOf(SelectedRecords.getEncDir().get(SelectedRow).getVs().getRr()));
            txtbp.setText(String.valueOf(SelectedRecords.getEncDir().get(SelectedRow).getVs().getBloodPressure()));
            txtbt.setText(String.valueOf(SelectedRecords.getEncDir().get(SelectedRow).getVs().getBodyTemp()));
            txtComments.setText(SelectedRecords.getEncDir().get(SelectedRow).getEncountercomments());
            txtEncid.setText(String.valueOf(SelectedRecords.getEncDir().get(SelectedRow).getEncounterid()));

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        boolean b1 = rolecheck();
        int SelectedRow = tblRecords.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if (b1) {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords.getModel();
            Patient SelectedRecords = (Patient) m2.getValueAt(SelectedRow, 0);
            mainSystem.getPatientDir().deletePatient(SelectedRecords);//.deleteHospital(SelectedRecords.getAllhospitals().get(SelectedRow));
            JOptionPane.showMessageDialog(this, "Selected row has been deleted");
            popTable();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnpopulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpopulateActionPerformed
        // TODO add your handling code here:
        popTable();
    }//GEN-LAST:event_btnpopulateActionPerformed

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxPatient;
    private javax.swing.JButton btnpopulate;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEncid;
    private javax.swing.JTextField txtPatientid;
    private javax.swing.JTextField txtbp;
    private javax.swing.JTextField txtbt;
    private javax.swing.JTextField txtrr;
    // End of variables declaration//GEN-END:variables
    public void popPatients() {
        ComboBoxPatient.removeAllItems();
        ComboBoxPatient.addItem("");
        for (Person ps : mainSystem.getPersonDir().getAllPeople()) {
            ComboBoxPatient.addItem(ps.getNameOfPerson());
        }
    }

    public void popPatients1(String name) {
        ComboBoxPatient.removeAllItems();
        ComboBoxPatient.addItem(name);
        for (Person ps : mainSystem.getPersonDir().getAllPeople()) {
            ComboBoxPatient.addItem(ps.getNameOfPerson());
        }
    }

    private void popTable() {
        tblRecords.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel) tblRecords.getModel();
        m1.setRowCount(0);
        for (Patient pat : this.mainSystem.getPatientDir().getAllPatients()) {
            Object[] row = new Object[9];
            row[0] = pat;
            row[1] = pat.getPatientId();
            row[2] = pat.getContactInfo();
            for (Encounter enc : pat.getEncDir()) {
                row[3] = enc.getVs().getBodyTemp();
                row[4] = enc.getVs().getRr();
                row[5] = enc.getVs().getBloodPressure();
                row[6] = enc.getEncounterdate();
                row[7] = enc.getEncounterid();
                row[8] = enc.getEncountercomments();
                m1.addRow(row);
            }

        }
    }
}
