/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CredentialDirectory;
import model.MainSys;
import model.City;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.SwingUtilities;
import model.Community;
import model.House;
import model.Operations;
import model.Hospital;

/**
 *
 * @author harshitaranganath
 */
public class CreateCityAdmin extends javax.swing.JPanel {

    /**
     * Creates new form CreateCityAdmin
     */
    City city1;
    Operations ops;
    MainSys mainSystem;
    CredentialDirectory allCredentials;

    public CreateCityAdmin(MainSys mainSystem, CredentialDirectory allCredentials) {
        initComponents();
        this.ops = ops;
        this.allCredentials = allCredentials;
        this.mainSystem = mainSystem;

        try {
            popcomm();
            popcity();
            popcity1();
        } catch (Exception e) {
        }

        try {
            if (allCredentials.getCredential().get(allCredentials.getCredential().size() - 1).getRole().equals("Community Admin")) {
                btncreate.setVisible(false);
            }
        } catch (Exception e) {
        }

    }

    public void setLabelText() {
        //jLabel1.setText("Welcome Community Admin");
    }

    public boolean rolecheck() {
        Main mj = new Main();
        String password;
        String username;
        String role;
        password = "admin";
        username = "admin";
        role = mj.getrole();
        boolean b1 = allCredentials.checkSysAdminCred(username, password, role);

        return b1;
    }

    public boolean IdCheck(int id) {
        boolean b1 = false;
        //city
        ArrayList<City> idcheck = mainSystem.searchCity(txtCity.getText());
        if (idcheck.contains(Integer.valueOf(id))) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblCity = new javax.swing.JLabel();
        lblCityid = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCommunityid = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblHouseNo = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCityid = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtCommunityid = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        txtHouseno = new javax.swing.JTextField();
        btncreate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        lblHouseNo1 = new javax.swing.JLabel();
        txtHouseno1 = new javax.swing.JTextField();
        txtHouse1 = new javax.swing.JTextField();
        lblHouse1 = new javax.swing.JLabel();
        btnedit = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnpop = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRecords1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRecords2 = new javax.swing.JTable();
        btncreate1 = new javax.swing.JButton();
        btncreate2 = new javax.swing.JButton();
        btnview1 = new javax.swing.JButton();
        btnpop1 = new javax.swing.JButton();
        btndelete1 = new javax.swing.JButton();
        btnpop2 = new javax.swing.JButton();
        btndelete2 = new javax.swing.JButton();
        btnview2 = new javax.swing.JButton();
        btnedit1 = new javax.swing.JButton();
        btnedit2 = new javax.swing.JButton();
        ComboBoxCity = new javax.swing.JComboBox<>();
        lblCommunity2 = new javax.swing.JLabel();
        ComboBoxCity1 = new javax.swing.JComboBox<>();
        lblCommunity3 = new javax.swing.JLabel();
        ComboBoxComm = new javax.swing.JComboBox<>();
        lblCommunity4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setForeground(new java.awt.Color(204, 51, 255));
        setToolTipText("");
        setOpaque(false);

        lblCity.setText("City ");

        lblCityid.setText("CityID");

        lblCommunity.setText("Community");

        lblCommunityid.setText("CommunityID");

        lblHouse.setText("House");

        lblHouseNo.setText("House Number");

        txtCityid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCityidKeyTyped(evt);
            }
        });

        txtCommunityid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommunityidKeyTyped(evt);
            }
        });

        txtHouseno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHousenoKeyTyped(evt);
            }
        });

        btncreate.setBackground(new java.awt.Color(204, 255, 204));
        btncreate.setText("Create");
        btncreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateActionPerformed(evt);
            }
        });

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "City", "CityId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        lblHouseNo1.setText("House Number");

        txtHouseno1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHouseno1KeyTyped(evt);
            }
        });

        lblHouse1.setText("House");

        btnedit.setBackground(new java.awt.Color(204, 255, 204));
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnview.setBackground(new java.awt.Color(204, 255, 204));
        btnview.setText("View Data");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(204, 255, 204));
        btndelete.setText("Delete entries");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnpop.setBackground(new java.awt.Color(204, 255, 204));
        btnpop.setText("Populate table");
        btnpop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpopActionPerformed(evt);
            }
        });

        tblRecords1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House", "HouseId", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRecords1);

        tblRecords2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Community", "CommunityId", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRecords2);

        btncreate1.setBackground(new java.awt.Color(204, 255, 204));
        btncreate1.setText("Create");
        btncreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreate1ActionPerformed(evt);
            }
        });

        btncreate2.setBackground(new java.awt.Color(204, 255, 204));
        btncreate2.setText("Create");
        btncreate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreate2ActionPerformed(evt);
            }
        });

        btnview1.setBackground(new java.awt.Color(204, 255, 204));
        btnview1.setText("View Data");
        btnview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnview1ActionPerformed(evt);
            }
        });

        btnpop1.setBackground(new java.awt.Color(204, 255, 204));
        btnpop1.setText("Populate table");
        btnpop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpop1ActionPerformed(evt);
            }
        });

        btndelete1.setBackground(new java.awt.Color(204, 255, 204));
        btndelete1.setText("Delete entries");
        btndelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelete1ActionPerformed(evt);
            }
        });

        btnpop2.setBackground(new java.awt.Color(204, 255, 204));
        btnpop2.setText("Populate table");
        btnpop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpop2ActionPerformed(evt);
            }
        });

        btndelete2.setBackground(new java.awt.Color(204, 255, 204));
        btndelete2.setText("Delete entries");
        btndelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelete2ActionPerformed(evt);
            }
        });

        btnview2.setBackground(new java.awt.Color(204, 255, 204));
        btnview2.setText("View Data");
        btnview2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnview2ActionPerformed(evt);
            }
        });

        btnedit1.setBackground(new java.awt.Color(204, 255, 204));
        btnedit1.setText("Edit");
        btnedit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnedit1ActionPerformed(evt);
            }
        });

        btnedit2.setBackground(new java.awt.Color(204, 255, 204));
        btnedit2.setText("Edit");
        btnedit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnedit2ActionPerformed(evt);
            }
        });

        lblCommunity2.setText("City");

        lblCommunity3.setText("City");

        lblCommunity4.setText("Community");

        jLabel2.setForeground(new java.awt.Color(5, 0, 0));
        jLabel2.setText("                    Create cities, communities or houses");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setSize(new java.awt.Dimension(100, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnpop)
                                .addGap(18, 18, 18)
                                .addComponent(btnview)
                                .addGap(97, 97, 97)
                                .addComponent(btnpop1)
                                .addGap(252, 252, 252)
                                .addComponent(btnpop2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCity)
                                    .addComponent(lblCityid))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCityid, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnedit)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btncreate)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(96, 96, 96)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(7, 7, 7)
                                                                .addComponent(lblCommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(lblCommunity))
                                                        .addGap(24, 24, 24))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(lblCommunityid)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ComboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCommunityid, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btncreate2)
                                                    .addComponent(btnedit1))
                                                .addGap(60, 60, 60)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblHouse)
                                                    .addComponent(lblCommunity3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblHouseNo)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(67, 67, 67)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHouseno, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ComboBoxComm, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ComboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnedit2)
                                            .addComponent(btncreate1))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 26, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblHouse1)
                                        .addComponent(lblHouseNo1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnview2)
                                        .addGap(50, 50, 50)))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHouseno1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHouse1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnview1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(95, 95, 95)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(btndelete)
                                .addGap(234, 234, 234)
                                .addComponent(btndelete1)
                                .addGap(226, 226, 226)
                                .addComponent(btndelete2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(176, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtCityid});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete, btnpop, btnview});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete1, btnpop1, btnview1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete2, btnpop2, btnview2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btncreate)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCityid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCityid))
                            .addComponent(btnedit))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCommunityid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunityid))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCommunity2)
                                        .addComponent(ComboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btncreate2))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnedit1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity3)
                                    .addComponent(ComboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity4)
                                    .addComponent(ComboBoxComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHouse)
                                    .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btncreate1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnedit2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHouseNo)
                            .addComponent(txtHouseno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnview)
                                .addComponent(btnpop))
                            .addComponent(btnpop1)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnview1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnpop2)
                            .addComponent(btnview2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btndelete1)
                    .addComponent(btndelete2)
                    .addComponent(btndelete))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHouse1)
                        .addGap(30, 30, 30)
                        .addComponent(lblHouseNo1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtHouse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(txtHouseno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btncreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateActionPerformed
        // TODO add your handling code here:
        if (txtCity.getText().length() != 0 || txtCityid.getText().length() != 0) {
            String City = txtCity.getText();
            int Cityid = Integer.valueOf(txtCityid.getText());
            City newCity = mainSystem.addnewCity();
            if (mainSystem.checkCityid(Cityid)) {
                JOptionPane.showMessageDialog(this, "The ID is already taken");
            } else {
                txtCity.setText("");
                txtCityid.setText("");
                newCity.setCityName(City);
                newCity.setCityId(Cityid);
                popcity();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
        }

    }//GEN-LAST:event_btncreateActionPerformed

    private void btnpopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpopActionPerformed
        // TODO add your handling code here:
        popTable();

    }//GEN-LAST:event_btnpopActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords.getModel();
            City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);
            txtCity.setText(SelectedRecords.getCityName());
            txtCityid.setText(String.valueOf(SelectedRecords.getCityId()));
        }
    }//GEN-LAST:event_btnviewActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:

        boolean b1 = rolecheck();
        int SelectedRow = tblRecords.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if (b1) {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords.getModel();
            City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);
            mainSystem.deleteCity(SelectedRecords);
            JOptionPane.showMessageDialog(this, "Selected row has been deleted");
            popTable();
        }

    }//GEN-LAST:event_btndeleteActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            if (txtCity.getText().length() != 0 || txtCityid.getText().length() != 0) {
                DefaultTableModel m2 = (DefaultTableModel) tblRecords.getModel();
                City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);
                ArrayList<City> results = this.mainSystem.searchCity(SelectedRecords.getCityName());
                if (mainSystem.checkCityid(Integer.valueOf(txtCityid.getText()))) {
                    JOptionPane.showMessageDialog(this, "The input Id is already in use");
                } else {
                    results.get(0).setCityName(txtCity.getText());
                    results.get(0).setCityId(Integer.valueOf(txtCityid.getText()));
                    JOptionPane.showMessageDialog(this, "Data has been updated");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
            }

        }
    }//GEN-LAST:event_btneditActionPerformed

    private void btncreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreate1ActionPerformed
        // TODO add your handling code here:
        if (ComboBoxCity1.getSelectedItem().toString().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Create a City");
        } else {
            if (txtHouse.getText().length() != 0 || txtHouseno.getText().length() != 0 || ComboBoxCity1.getSelectedItem().toString().length() != 0 || ComboBoxComm.getSelectedItem().toString().length() != 0) {
                String Houseadd = txtHouse.getText();
                int Houseid = Integer.valueOf(txtHouseno.getText());
                for (City ct1 : mainSystem.getAllcities()) {
                    for (Community com1 : ct1.getAllCommunities()) {
                        if (com1.checkhouseid(Houseid)) {
                            JOptionPane.showMessageDialog(this, "The input Id is already in use");
                        } else {
                            Community comm = new Community();
                            House hse = com1.addNewHouse();
                            hse.setHouseNum(Houseid);
                            hse.setHouseAddress(Houseadd);
                            comm.setCommunityName(ComboBoxComm.getSelectedItem().toString());
                            hse.setCommunity(comm);
                            txtHouse.setText("");
                            txtHouseno.setText("");
                            popcomm();
                            popcity1();
                        }

                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
            }
        }


    }//GEN-LAST:event_btncreate1ActionPerformed

    private void btncreate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreate2ActionPerformed
        // TODO add your handling code here:
        if (txtCommunity.getText().length() != 0 || txtCommunityid.getText().length() != 0 || ComboBoxCity.getSelectedItem().toString().length() != 0) {
            String Comm = txtCommunity.getText();
            int Commid = Integer.valueOf(txtCommunityid.getText());
            for (City ct1 : mainSystem.getAllcities()) {
                if (ct1.checkcommid(Commid)) {
                    JOptionPane.showMessageDialog(this, "The Community Code is already in use");
                } else {
                    Community comm = ct1.addCommunity();
                    comm.setCommunityName(Comm);
                    comm.setZipCode(Commid);
                    City ct = new City();
                    ct.setCityName(ComboBoxCity.getSelectedItem().toString());
                    comm.setCity(ct);
                    txtCommunityid.setText("");
                    txtCommunity.setText("");
                    popcity();
                    popcomm();
                    popcity1();
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
        }


    }//GEN-LAST:event_btncreate2ActionPerformed

    private void btnview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnview1ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords2.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
            txtCommunity.setText(SelectedRecords.getCommunityName());
            txtCommunityid.setText(String.valueOf(SelectedRecords.getZipCode()));

        }
    }//GEN-LAST:event_btnview1ActionPerformed

    private void btnpop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpop1ActionPerformed
        // TODO add your handling code here:
        popTable2();
    }//GEN-LAST:event_btnpop1ActionPerformed

    private void btndelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelete1ActionPerformed
        // TODO add your handling code here:
        boolean b1 = rolecheck();
        int SelectedRow = tblRecords2.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if (b1) {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
            for (City ct1 : mainSystem.getAllcities()) {
                ct1.deleteCommunity(SelectedRecords);
            }
            JOptionPane.showMessageDialog(this, "Selected row has been deleted");
            popTable2();
        }
    }//GEN-LAST:event_btndelete1ActionPerformed

    private void btnpop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpop2ActionPerformed
        // TODO add your handling code here:
        popTable3();
    }//GEN-LAST:event_btnpop2ActionPerformed

    private void btndelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelete2ActionPerformed
        // TODO add your handling code here:
        boolean b1 = rolecheck();
        int SelectedRow = tblRecords2.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if (b1) {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
            for (City ct1 : mainSystem.getAllcities()) {
                for (Community ct2 : ct1.getAllCommunities()) {
                    for (House ct3 : ct2.getAllHouses()) {
                        ct3.deleteHouse(ct3);

                    }
                }
            }
            JOptionPane.showMessageDialog(this, "Selected row has been deleted");
            popTable3();
        }

    }//GEN-LAST:event_btndelete2ActionPerformed

    private void btnview2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnview2ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords1.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            DefaultTableModel m2 = (DefaultTableModel) tblRecords1.getModel();
            House SelectedRecords = (House) m2.getValueAt(SelectedRow, 0);
            txtHouse1.setText(SelectedRecords.getHouseAddress());
            txtHouseno1.setText(String.valueOf(SelectedRecords.getHouseNum()));
        }

    }//GEN-LAST:event_btnview2ActionPerformed

    private void btnedit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedit1ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords2.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
        } else {
            if (txtCommunity.getText().length() != 0 || txtCommunityid.getText().length() != 0) {
                DefaultTableModel m2 = (DefaultTableModel) tblRecords2.getModel();
                Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
                for (City ct1 : mainSystem.getAllcities()) {
                    if (ct1.checkcommid(Integer.valueOf(txtCommunityid.getText()))) {
                        JOptionPane.showMessageDialog(this, "Input Id  already in use");
                    } else {
                        ArrayList<Community> searchComm = ct1.searchCommunity(SelectedRecords.getCommunityName());
                        searchComm.get(0).setCommunityName(txtCommunity.getText());
                        searchComm.get(0).setZipCode(Integer.valueOf(txtCommunityid.getText()));
                    }

                }
                JOptionPane.showMessageDialog(this, "Data updated");

            } else {
                JOptionPane.showMessageDialog(this, "Please fill all the fields");

            }

        }
    }//GEN-LAST:event_btnedit1ActionPerformed

    private void btnedit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedit2ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords1.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            if (txtHouse1.getText().length() != 0 || txtHouseno1.getText().length() != 0) {
                DefaultTableModel m2 = (DefaultTableModel) tblRecords1.getModel();
                House SelectedRecords = (House) m2.getValueAt(SelectedRow, 0);
                for (City ct1 : mainSystem.getAllcities()) {
                    for (Community cm : ct1.getAllCommunities()) {
                        if (cm.getCommunityName().equals(SelectedRecords.getCommunity().getCommunityName())) {
                            if (cm.checkhouseid(Integer.valueOf(txtHouseno1.getText()))) {
                                JOptionPane.showMessageDialog(this, "The input Id is already in use");
                            } else {
                                ArrayList<House> searchHouse = cm.searchHouse(SelectedRecords.getHouseAddress());
                                searchHouse.get(0).setHouseAddress(txtHouse1.getText());
                                Community cm1 = new Community();
                                cm1.setCommunityName(SelectedRecords.getCommunity().getCommunityName());
                                searchHouse.get(0).setCommunity(cm1);
                                searchHouse.get(0).setHouseNum(Integer.valueOf(txtHouseno1.getText()));
                            }

                        }
                    }
                }
                JOptionPane.showMessageDialog(this, "Data has been updated");

            } else {
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
            }

        }

    }//GEN-LAST:event_btnedit2ActionPerformed

    private void txtCityidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityidKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCityidKeyTyped

    private void txtCommunityidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommunityidKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCommunityidKeyTyped

    private void txtHousenoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHousenoKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtHousenoKeyTyped

    private void txtHouseno1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseno1KeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtHouseno1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCity;
    private javax.swing.JComboBox<String> ComboBoxCity1;
    private javax.swing.JComboBox<String> ComboBoxComm;
    private javax.swing.JButton btncreate;
    private javax.swing.JButton btncreate1;
    private javax.swing.JButton btncreate2;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btndelete1;
    private javax.swing.JButton btndelete2;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnedit1;
    private javax.swing.JButton btnedit2;
    private javax.swing.JButton btnpop;
    private javax.swing.JButton btnpop1;
    private javax.swing.JButton btnpop2;
    private javax.swing.JButton btnview;
    private javax.swing.JButton btnview1;
    private javax.swing.JButton btnview2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityid;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunity2;
    private javax.swing.JLabel lblCommunity3;
    private javax.swing.JLabel lblCommunity4;
    private javax.swing.JLabel lblCommunityid;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblHouse1;
    private javax.swing.JLabel lblHouseNo;
    private javax.swing.JLabel lblHouseNo1;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTable tblRecords1;
    private javax.swing.JTable tblRecords2;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCityid;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtCommunityid;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtHouse1;
    private javax.swing.JTextField txtHouseno;
    private javax.swing.JTextField txtHouseno1;
    // End of variables declaration//GEN-END:variables

    private void popTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel) tblRecords.getModel();
        m1.setRowCount(0);
        for (City Cs : this.mainSystem.getAllcities()) {
            Object[] row = new Object[2];
            row[0] = Cs;
            row[1] = Cs.getCityId();
            m1.addRow(row);
        }
    }

    private void popTable2() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel) tblRecords2.getModel();
        m1.setRowCount(0);
        for (City Cs : this.mainSystem.getAllcities()) {
            for (Community Cs1 : Cs.getAllCommunities()) {
                Object[] row = new Object[3];
                row[0] = Cs1;
                row[1] = Cs1.getZipCode();
                row[2] = Cs1.getCity().getCityName();
                m1.addRow(row);
            }
        }
    }

    private void popTable3() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel) tblRecords1.getModel();
        m1.setRowCount(0);

        for (City Cs : this.mainSystem.getAllcities()) {
            Object[] row = new Object[4];
            row[3] = Cs.getCityName();
            for (Community Cs1 : Cs.getAllCommunities()) {
                for (House Cs2 : Cs1.getAllHouses()) {
                    if (Cs1.getCommunityName() == Cs2.getCommunity().getCommunityName()) {
                        row[0] = Cs2;
                        row[1] = Cs2.getHouseNum();
                        row[2] = Cs2.getCommunity().getCommunityName();
                        m1.addRow(row);
                    }

                }

            }

        }
    }

    public void popcity() {
        ComboBoxCity.removeAllItems();
        ComboBoxCity.addItem("");

        for (City ct : mainSystem.getAllcities()) {
            ComboBoxCity.addItem(ct.getCityName());
        }
    }

    public void popcity1() {
        ComboBoxCity1.removeAllItems();
        ComboBoxCity1.addItem("");

        for (City ct : mainSystem.getAllcities()) {
            ComboBoxCity1.addItem(ct.getCityName());
        }
    }

    public void popcity2(String city) {
        ComboBoxCity.removeAllItems();
        ComboBoxCity.addItem(city);
        for (City ct : mainSystem.getAllcities()) {
            if (ct.getCityName().equals(city)) {
            } else {
                ComboBoxCity.addItem(ct.getCityName());
            }

        }
    }

    public void popcomm() {
        ComboBoxComm.removeAllItems();
        ComboBoxComm.addItem("");
        for (City ct : mainSystem.getAllcities()) {
            for (Community ct2 : ct.getAllCommunities()) {
                ComboBoxComm.addItem(ct2.getCommunityName());
            }
        }
    }
}
